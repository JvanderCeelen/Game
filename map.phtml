<!doctype html>

<html>
<head>
    <meta charset="utf-8">
    <link rel="stylesheet/less" href="source/less/style.less">
    <link rel="stylesheet/less" href="source/less/map.less">
    <script async type="text/javascript" src="source/js/less.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
</head>
<body class="map">
    <main>
        <table>
            <tbody>
                <!-- content set via js -->
            </tbody>
        </table>
        <input id="console-input" type="text">
    </main>
</body>
</html>

<script>
    var map = {

        init: function() {
            map.addTr();
            map.attachHandlers();
        },

        attachHandlers: function() {
            $('#console-input').on('keyup', function(event) {
                if (event.keyCode == 13) {
                    map.handleInput(event);
                    $(event.target).val('');
                }
            });
        },

        /**
         * Js solution of making a bunch of tr's
         * @return undefined
         */
        addTr: function() {
            var tBody = $('body.map').find('tbody');

            for (i = 0; i < 10; i++) {
                tBody.append('<tr></tr>');
            }

            map.addTd();
        },

        /**
         * Js solution of making a bunch of td's for each tr`
         * @return undefined
         */
        addTd: function() {
            var selector = $('body.map tbody tr');

            $(selector).each(function(index, tr) {

                for (i = 0; i < 10; i++) {
                    $(tr).append('<td></td>');
                }
            });

            map.setActiveTile();
        },

        /**
         * Set active tile on the map. If no location is given the default is
         * 5,5.
         * @var location array
         * @return undefined
         */
        setActiveTile: function(location) {
            var table = $('body.map').find('tbody');
            var location = location || [5,5];

            table.find('tr:nth-child(' + location[0] + ')')
                 .find('td:nth-child(' + location[1] + ')')
                 .addClass('active');
        },

        /**
         * Handles the input of the map
         * @var event obj
         * @return undefined
         */
        handleInput: function(event) {
            var direction = $('#console-input').val();

            if (! (direction == 'n' || 's' || 'e' || 'w')) {
                console.log('geen windrichting');
                return;
            } else {
                map.handleMove(direction);
            }
        },

        /**
         * Handles the movement on the map, i.e. change the active tile location.
         * Only reacts to cardinal directions.
         * @var direction string
         * @return undefined
         */
        handleMove: function(direction) {
            var activeTile = $('body.map').find('td.active');

            switch (direction) {
                case 'n':
                    var location = map.getActiveTileLocation();
                    location[0] = location[0] - 1;
                    map.setActiveTile(location);
                    $(activeTile).removeClass('active');
                    break;
                case 's':
                    var location = map.getActiveTileLocation();
                    location[0] = location[0] + 1;
                    map.setActiveTile(location);
                    $(activeTile).removeClass('active');
                    break;
                case 'w':
                    var location = map.getActiveTileLocation();
                    location[1] = location[1] - 1;
                    map.setActiveTile(location);
                    $(activeTile).removeClass('active');
                    break;
                case 'e':
                    var location = map.getActiveTileLocation();
                    location[1] = location[1] + 1;
                    map.setActiveTile(location);
                    $(activeTile).removeClass('active');
                    break;
            }
        },

        /**
         * Gets the coordinates of the active map tile.
         * @return location array
         */
        getActiveTileLocation: function() {
            var location = [];

            $('body.map tbody tr').each(function(rowIndex, row) {

                $(row).find('td').each(function(cellIndex, cell) {
                    if ($(cell).hasClass('active')) {
                        location = [rowIndex + 1, cellIndex + 1];
                    }
                });
            });

            return location;
        }
    };

    map.init();
</script>
